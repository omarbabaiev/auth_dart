{
  "info": {
    "name": "Dart Authentication API",
    "description": "Comprehensive authentication API built with Dart and Shelf framework. Features JWT authentication, user management, and localization support.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register (Extended)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"username\": \"testuser\",\n  \"password\": \"password123\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"phone_number\": \"+905551234567\",\n  \"date_of_birth\": \"1990-01-01\",\n  \"address\": \"123 Main Street\",\n  \"city\": \"Istanbul\",\n  \"country\": \"Turkey\",\n  \"bio\": \"Software Developer\",\n  \"avatar_url\": \"https://example.com/avatar.jpg\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Create user registration with all optional fields"
          },
          "response": []
        },
        {
          "name": "Register (Basic)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"basic@example.com\",\n  \"username\": \"basicuser\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Create user registration with only required fields"
          },
          "response": []
        },
        {
          "name": "Register (Partial)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"partial@example.com\",\n  \"username\": \"partialuser\",\n  \"password\": \"password123\",\n  \"first_name\": \"Jane\",\n  \"last_name\": \"Smith\",\n  \"phone_number\": \"+905559876543\",\n  \"city\": \"Ankara\",\n  \"country\": \"Turkey\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Create user registration with some optional fields"
          },
          "response": []
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "User login with email and password"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Refresh access token using refresh token"
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            },
            "description": "User logout and invalidate refresh token"
          },
          "response": []
        }
      ],
      "description": "Authentication endpoints for user registration, login, logout, and token management"
    },
    {
      "name": "üë§ User Management",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            },
            "description": "Get current user profile information"
          },
          "response": []
        },
        {
          "name": "Update Profile (Full)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"newusername\",\n  \"email\": \"newemail@example.com\",\n  \"first_name\": \"Updated\",\n  \"last_name\": \"Name\",\n  \"phone_number\": \"+905551111111\",\n  \"date_of_birth\": \"1985-05-15\",\n  \"address\": \"456 New Street\",\n  \"city\": \"Izmir\",\n  \"country\": \"Turkey\",\n  \"bio\": \"Updated bio with more details\",\n  \"avatar_url\": \"https://example.com/new-avatar.jpg\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            },
            "description": "Update user profile with all fields"
          },
          "response": []
        },
        {
          "name": "Update Profile (Partial)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"city\": \"Istanbul\",\n  \"bio\": \"Software Developer\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            },
            "description": "Update user profile with selected fields only"
          },
          "response": []
        }
      ],
      "description": "User profile management endpoints"
    },
    {
      "name": "üß™ Test & Documentation",
      "item": [
        {
          "name": "API Documentation",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Get API documentation and usage examples"
          },
          "response": []
        },
        {
          "name": "Echo Test",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/echo/hello",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["echo", "hello"]
            },
            "description": "Simple echo test endpoint"
          },
          "response": []
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Check server health status"
          },
          "response": []
        }
      ],
      "description": "Test endpoints and documentation"
    },
    {
      "name": "üîç Error Examples",
      "item": [
        {
          "name": "Register - Invalid Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid-email\",\n  \"username\": \"testuser\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Test invalid email format error"
          },
          "response": []
        },
        {
          "name": "Register - Short Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"username\": \"testuser\",\n  \"password\": \"123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Test password too short error"
          },
          "response": []
        },
        {
          "name": "Login - Invalid Credentials",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"wrong@example.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Test invalid login credentials error"
          },
          "response": []
        },
        {
          "name": "Profile - Unauthorized",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            },
            "description": "Test unauthorized access error"
          },
          "response": []
        }
      ],
      "description": "Error handling examples and testing"
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string",
      "description": "Base URL for the API server"
    },
    {
      "key": "token",
      "value": "",
      "type": "string",
      "description": "JWT access token for authenticated requests"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string",
      "description": "JWT refresh token for token renewal"
    }
  ],
  "event": [
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-save tokens from login/register responses",
          "if (pm.response.code === 200) {",
          "    const response = pm.response.json();",
          "    if (response.token) {",
          "        pm.collectionVariables.set('token', response.token);",
          "    }",
          "    if (response.refresh_token) {",
          "        pm.collectionVariables.set('refresh_token', response.refresh_token);",
          "    }",
          "}"
        ]
      }
    }
  ]
} 